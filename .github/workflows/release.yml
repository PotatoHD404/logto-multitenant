name: Release

on:
  push:
    branches:
      - master
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}

jobs:
  dockerize:
    if: startsWith(github.ref, 'refs/tags/')
    environment: release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          # https://github.com/docker/metadata-action#typesemver
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=edge

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64, linux/arm64
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # Build and push the edge image on every master push
  # Use official docker workflows since we only need to build amd64 images.
  dockerize-edge:
    if: ${{ !startsWith(github.ref, 'refs/tags/')}}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=edge

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push docker image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # Publish packages and create git tags if needed
  # COMMENTED OUT - NPM publishing disabled for now
  # publish-and-tag:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write
  #     id-token: write
  #   env:
  #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  #   if: ${{ !startsWith(github.ref, 'refs/tags/') }}

  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         fetch-depth: 0

  #     - name: Setup Node and pnpm
  #       uses: silverhand-io/actions-node-pnpm-run-steps@v5
  #       with:
  #         pnpm-version: 10
  #         node-version: ^22.14.0

  #     - name: Configure Git user
  #       run: |
  #         git config --global user.email "action@github.com"
  #         git config --global user.name "GitHub Action"

  #     - name: Publish
  #       run: node .scripts/publish.js

  create-github-release:
    environment: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node and pnpm
        uses: silverhand-io/actions-node-pnpm-run-steps@v5
        with:
          pnpm-version: 10
          node-version: ^22.14.0

      - name: Build
        run: pnpm -r build

      - name: Package
        run: ./.scripts/package.sh

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          body: ""
          files: /tmp/logto.tar.gz
          append_body: true
